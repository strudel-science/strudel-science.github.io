{"version":3,"file":"component---src-components-layouts-page-layout-tsx-content-file-path-content-planning-framework-typology-mdx-75388fc041d957722f73.js","mappings":"4KAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,GAAI,OACHC,EAAAA,EAAAA,MAAsBL,EAAMM,YAC/B,OAAOC,EAAAA,cAAoBN,EAAYG,GAAI,KAAM,aACnD,CAKA,MAJA,SAAoBJ,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOQ,QAASC,GAAaP,OAAOC,OAAO,CAAC,GAAGE,EAAAA,EAAAA,MAAsBL,EAAMM,YAC3E,OAAOG,EAAYF,EAAAA,cAAoBE,EAAWT,EAAOO,EAAAA,cAAoBR,EAAmBC,IAAUD,EAAkBC,EAC9H,E,kDCNA,MAAMU,EAAaC,IACjB,IAAI,YAACC,EAAW,SAAEC,GAAYF,EAE9B,OADAG,QAAQC,IAAIH,GACLL,EAAAA,cAAoBS,EAAAA,EAAY,CACrCC,YAAY,GACXV,EAAAA,cAAoBW,EAAAA,EAAY,KAAMX,EAAAA,cAAoBY,EAAAA,EAAO,CAClEC,QAAS,GACRb,EAAAA,cAAoBc,EAAAA,EAAY,CACjCC,UAAW,KACXC,QAAS,KACTC,WAAY,QACXZ,EAAYa,YAAYC,OAAQnB,EAAAA,cAAoBc,EAAAA,EAAY,CACjEE,QAAS,KACTC,WAAY,UACXZ,EAAYa,YAAYE,YAAapB,EAAAA,cAAoBqB,EAAAA,EAAgB,KAAMf,GAAU,EAG/E,SAASgB,EAAiB7B,GACvC,OAAOO,EAAAA,cAAoBG,EAAYV,EAAOO,EAAAA,cAAoBuB,EAAqB9B,GACzF,C,yFCjBO,MAAM+B,EAA0CpB,IAA4B,IAA3B,SAAEE,KAAamB,GAAM,EAC3E,OACEzB,EAAAA,cAAC0B,EAAAA,EAAS,eACRX,UAAU,UACVY,SAAS,KACTC,GAAI,CACFC,cAAe,EACfC,WAAY,IAEVL,GAEJzB,EAAAA,cAACqB,EAAAA,EAAc,KACZf,GAEO,C,+EChBT,MAAMK,EAA0CP,IAAmB,IAAlB,SAAEE,GAAU,EAClE,OACEN,EAAAA,cAAC+B,EAAAA,EAAW,CACVC,eAAe,KACfJ,GAAI,CACFK,gBAAiB,eACjBC,MAAO,cAGR5B,EACW,C,yFCFX,MAAMyB,EAA0C3B,IAMhD,IANiD,eACtD4B,EAAc,WACdG,EAAU,SACV7B,EAAQ,GACRsB,KACGH,GACJ,EACC,OACEzB,EAAAA,cAACoC,EAAAA,EAAG,eACFrB,UAAU,UACVa,GAAI,CACFC,cAAe,EACfC,WAAY,KACTF,IAEDH,GAEHU,GACCnC,EAAAA,cAACoC,EAAAA,EAAG,CACFR,GAAI,CACFK,gBAAiB,aACjBI,OAAQ,OACRC,KAAqB,SAAfH,EAAwB,EAAI,OAClCI,SAAU,WACVC,MAAsB,UAAfL,EAAyB,EAAI,OACpCM,IAAK,EACLC,MAAO,UAIb1C,EAAAA,cAACwB,EAAAA,EAAa,CACZT,UAAU,MACVY,SAAUK,EACVJ,GAAI,CACFC,cAAe,EACfC,WAAY,IAGbxB,GAEC,C,+EC9CH,MAAMe,EAA8CjB,IAAmB,IAAlB,SAAEE,GAAU,EACtE,OACEN,EAAAA,cAACoC,EAAAA,EAAG,CACFO,UAAU,kBACVf,GAAI,CACF,qCAAsC,CACpCgB,aAAc,EACdC,UAAW,GAEb,2BAA4B,CAC1BC,UAAW,aACXC,eAAgB,cAChBjB,WAAY,GAEd,iBAAkB,CAChBc,aAAc,KAIjBtC,EACG,C,sECKH,MAAM0C,EAAa,gBAAoB,CAAC,GAiCxC,SAASC,EAAiBlD,GAC/B,MAAMmD,EAAoB,aAAiBF,GAG3C,OAAO,WAAc,IAEO,mBAAfjD,EACFA,EAAWmD,GAGb,IAAIA,KAAsBnD,IAChC,CAACmD,EAAmBnD,GACzB,C","sources":["webpack://strudel/./content/planning-framework/typology.mdx","webpack://strudel/./src/components/layouts/PageLayout.tsx","webpack://strudel/./src/components/PageContainer.tsx","webpack://strudel/./src/components/PageHeader.tsx","webpack://strudel/./src/components/PageSection.tsx","webpack://strudel/./src/components/StyledMarkdown.tsx","webpack://strudel/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\"\n  }, _provideComponents(), props.components);\n  return React.createElement(_components.h1, null, \"Background\");\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/strudel-web/strudel-web/content/planning-framework/typology.mdx\";\nimport * as React from 'react';\nimport {Stack, Typography} from '@mui/material';\nimport BaseLayout from './BaseLayout';\nimport {PageHeader} from '../PageHeader';\nimport {StyledMarkdown} from '../StyledMarkdown';\nconst PageLayout = _ref => {\n  let {pageContext, children} = _ref;\n  console.log(pageContext);\n  return React.createElement(BaseLayout, {\n    hasSidebar: true\n  }, React.createElement(PageHeader, null, React.createElement(Stack, {\n    spacing: 2\n  }, React.createElement(Typography, {\n    component: \"h1\",\n    variant: \"h3\",\n    fontWeight: \"bold\"\n  }, pageContext.frontmatter.title), React.createElement(Typography, {\n    variant: \"h6\",\n    fontWeight: \"normal\"\n  }, pageContext.frontmatter.subtitle))), React.createElement(StyledMarkdown, null, children));\n};\nPageLayout\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PageLayout, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n","import * as React from 'react';\nimport { Container, ContainerProps } from '@mui/material';\nimport { StyledMarkdown } from './StyledMarkdown';\n\n/**\n * Common Container component to be used in page content areas and sections.\n * This helps ensure container width is consistent across different page sections.\n */\nexport const PageContainer: React.FC<ContainerProps> = ({ children, ...rest }) => {\n  return (\n    <Container\n      component=\"article\" \n      maxWidth=\"md\"\n      sx={{\n        paddingBottom: 4,\n        paddingTop: 4,\n      }}\n      {...rest}\n    >\n      <StyledMarkdown>\n        {children}  \n      </StyledMarkdown>\n    </Container>\n  )\n};","import React, { PropsWithChildren } from 'react';\nimport { PageSection } from './PageSection';\n\n/**\n * Full width light grey page section for the page title and headline.\n */\nexport const PageHeader: React.FC<PropsWithChildren> = ({ children }) => {\n  return (\n    <PageSection\n      containerWidth=\"md\"\n      sx={{\n        backgroundColor: 'neutral.main',\n        color: 'info.main'\n      }}\n    >\n      {children}\n    </PageSection>\n  );\n};","import * as React from 'react';\nimport { Box, Container, Breakpoint, BoxProps } from '@mui/material';\nimport { PageContainer } from './PageContainer';\n\ninterface PageSectionProps extends BoxProps {\n  /** Optionally wrap the inner content in its own container and give it a max width. */\n  containerWidth?: false | Breakpoint | undefined;\n  /** Optionally include red ribbon on the left or right side */\n  sideRibbon?: 'left' | 'right';\n}\n\n/**\n * Generic wrapper component for sections in a page.\n */\nexport const PageSection: React.FC<PageSectionProps> = ({\n  containerWidth,\n  sideRibbon,\n  children,\n  sx,\n  ...rest\n}) => {\n  return (\n    <Box\n      component=\"section\"\n      sx={{\n        paddingBottom: 4,\n        paddingTop: 4,\n        ...sx\n      }} \n      {...rest}\n    >\n      {sideRibbon && (\n        <Box\n          sx={{\n            backgroundColor: 'error.main',\n            height: '100%',\n            left: sideRibbon === 'left' ? 0 : 'auto',\n            position: 'absolute',\n            right: sideRibbon === 'right' ? 0 : 'auto',\n            top: 0,\n            width: '20px',\n          }}\n        />\n      )}\n      <PageContainer\n        component=\"div\"\n        maxWidth={containerWidth}\n        sx={{\n          paddingBottom: 0,\n          paddingTop: 0,\n        }}\n      >\n        {children} \n      </PageContainer>\n    </Box>\n  );\n};","import React, { PropsWithChildren } from 'react';\nimport { PageSection } from './PageSection';\nimport { Box } from '@mui/material';\n\n/**\n * Wrapper component for markdown content that will \n * apply styles to the inner html generated by the markdown.\n */\nexport const StyledMarkdown: React.FC<PropsWithChildren> = ({ children }) => {\n  return (\n    <Box\n      className=\"styled-markdown\"\n      sx={{\n        '& h1, & h2, & h3, & h4, & h5, & h6': {\n          marginBottom: 2,\n          marginTop: 2,\n        },\n        '& h2:not(:first-of-type)': {\n          borderTop: '2px dotted',\n          borderTopColor: 'error.light',\n          paddingTop: 2,\n        },\n        '& *:last-child': {\n          marginBottom: 0,\n        },\n      }}\n    >\n      {children}\n    </Box>\n  );\n};","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","h1","_provideComponents","components","React","wrapper","MDXLayout","PageLayout","_ref","pageContext","children","console","log","BaseLayout","hasSidebar","PageHeader","Stack","spacing","Typography","component","variant","fontWeight","frontmatter","title","subtitle","StyledMarkdown","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","PageContainer","rest","Container","maxWidth","sx","paddingBottom","paddingTop","PageSection","containerWidth","backgroundColor","color","sideRibbon","Box","height","left","position","right","top","width","className","marginBottom","marginTop","borderTop","borderTopColor","MDXContext","useMDXComponents","contextComponents"],"sourceRoot":""}