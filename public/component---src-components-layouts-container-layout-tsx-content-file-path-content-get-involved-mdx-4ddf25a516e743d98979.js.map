{"version":3,"file":"component---src-components-layouts-container-layout-tsx-content-file-path-content-get-involved-mdx-4ddf25a516e743d98979.js","mappings":"4KAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,GAAI,KACJC,EAAG,IACHC,GAAI,KACJC,OAAQ,SACRC,GAAI,KACJC,GAAI,KACJC,GAAI,OACHC,EAAAA,EAAAA,MAAsBX,EAAMY,YAC/B,OAAOC,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBZ,EAAYG,GAAI,KAAM,wBAAyB,KAAMS,EAAAA,cAAoBZ,EAAYI,EAAG,KAAMQ,EAAAA,cAAoBZ,EAAYK,GAAI,KAAMO,EAAAA,cAAoBZ,EAAYM,OAAQ,KAAM,8BAA+B,KAAMM,EAAAA,cAAoBZ,EAAYI,EAAG,KAAMQ,EAAAA,cAAoBZ,EAAYK,GAAI,KAAMO,EAAAA,cAAoBZ,EAAYM,OAAQ,KAAM,8BAA+B,KAAMM,EAAAA,cAAoBZ,EAAYO,GAAI,KAAM,KAAMK,EAAAA,cAAoBZ,EAAYQ,GAAI,KAAM,sCAAuCI,EAAAA,cAAoB,KAAM,KAAMA,EAAAA,cAAoB,IAAK,CAC9nBC,KAAM,0BACL,qBAAsB,KAAMD,EAAAA,cAAoBZ,EAAYQ,GAAI,KAAM,iDAAkDI,EAAAA,cAAoB,KAAM,KAAMA,EAAAA,cAAoB,IAAK,CAClLC,KAAM,8CACL,yCAA0C,KAAMD,EAAAA,cAAoBZ,EAAYQ,GAAI,KAAM,qBAAsBI,EAAAA,cAAoB,IAAK,CAC1IC,KAAM,uDACNC,OAAQ,UACP,yBAA0B,MAAO,KAAMF,EAAAA,cAAoBZ,EAAYS,GAAI,KAAM,2BAA4B,KAAMG,EAAAA,cAAoBZ,EAAYI,EAAG,KAAM,6DAA8D,KAAMQ,EAAAA,cAAoBZ,EAAYI,EAAG,KAAMQ,EAAAA,cAAoBZ,EAAYK,GAAI,KAAM,qHAAsH,KAAMO,EAAAA,cAAoBZ,EAAYI,EAAG,KAAM,yDAA0D,KAAMQ,EAAAA,cAAoBZ,EAAYO,GAAI,KAAM,KAAMK,EAAAA,cAAoBZ,EAAYQ,GAAI,KAAM,yGAA0G,KAAMI,EAAAA,cAAoBZ,EAAYQ,GAAI,KAAM,oGAAqG,MACt3B,CAKA,MAJA,SAAoBT,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOgB,QAASC,GAAaf,OAAOC,OAAO,CAAC,GAAGQ,EAAAA,EAAAA,MAAsBX,EAAMY,YAC3E,OAAOK,EAAYJ,EAAAA,cAAoBI,EAAWjB,EAAOa,EAAAA,cAAoBd,EAAmBC,IAAUD,EAAkBC,EAC9H,E,oBCrBA,MAAMkB,EAAkBC,IACtB,IAAI,SAACC,GAAYD,EACjB,OAAON,EAAAA,cAAoBQ,EAAAA,EAAY,KAAMR,EAAAA,cAAoBS,EAAAA,EAAW,CAC1EC,UAAW,UACXC,SAAU,MACTJ,GAAU,EAGA,SAASK,EAAiBzB,GACvC,OAAOa,EAAAA,cAAoBK,EAAiBlB,EAAOa,EAAAA,cAAoBa,EAAqB1B,GAC9F,C,sECmBO,MAAM2B,EAAa,gBAAoB,CAAC,GAiCxC,SAASC,EAAiBhB,GAC/B,MAAMiB,EAAoB,aAAiBF,GAG3C,OAAO,WAAc,IAEO,mBAAff,EACFA,EAAWiB,GAGb,IAAIA,KAAsBjB,IAChC,CAACiB,EAAmBjB,GACzB,C","sources":["webpack://strudel/./content/get-involved.mdx","webpack://strudel/./src/components/layouts/ContainerLayout.tsx","webpack://strudel/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    em: \"em\",\n    strong: \"strong\",\n    ul: \"ul\",\n    li: \"li\",\n    h2: \"h2\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h1, null, \"Connect with STRUDEL\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.em, null, React.createElement(_components.strong, null, \"Want to stay up to date?\"))), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.em, null, React.createElement(_components.strong, null, \"Have questions or ideas?\"))), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"Get in touch with the core team at \", React.createElement(\"em\", null, React.createElement(\"a\", {\n    href: \"mailto:strudel@lbl.gov\"\n  }, \"strudel@lbl.gov\"))), \"\\n\", React.createElement(_components.li, null, \"Join our mailing list by sending a message to \", React.createElement(\"em\", null, React.createElement(\"a\", {\n    href: \"mailto:strudel-community+subscribe@lbl.gov\"\n  }, \"strudel-community+subscribe@lbl.gov\"))), \"\\n\", React.createElement(_components.li, null, \"Contribute to the \", React.createElement(\"a\", {\n    href: \"https://github.com/orgs/strudel-science/discussions/\",\n    target: \"_blank\"\n  }, \"Discussion on GitHub\")), \"\\n\"), \"\\n\", React.createElement(_components.h2, null, \"Contributing to STRUDEL\"), \"\\n\", React.createElement(_components.p, null, \"The STRUDEL project is eager for community contributions.\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.em, null, \"A complete guide on contributing to the STRUDEL Planning Framework and the STRUDEL Design System is coming soon.\")), \"\\n\", React.createElement(_components.p, null, \"For now, please contribute to the STRUDEL project by:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"Sharing feedback on the STRUDEL Planning Framework or Design System through one of the avenues above.\"), \"\\n\", React.createElement(_components.li, null, \"We are planning tutorial workshops & hackathons for Q1/Q 2024. Reach out to learn about joining!\"), \"\\n\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/strudel-web/strudel-web/content/get-involved.mdx\";\nimport * as React from 'react';\nimport {Container} from '@mui/material';\nimport BaseLayout from './BaseLayout';\nconst ContainerLayout = _ref => {\n  let {children} = _ref;\n  return React.createElement(BaseLayout, null, React.createElement(Container, {\n    component: \"article\",\n    maxWidth: \"lg\"\n  }, children));\n};\nContainerLayout\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(ContainerLayout, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","h1","p","em","strong","ul","li","h2","_provideComponents","components","React","href","target","wrapper","MDXLayout","ContainerLayout","_ref","children","BaseLayout","Container","component","maxWidth","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","MDXContext","useMDXComponents","contextComponents"],"sourceRoot":""}