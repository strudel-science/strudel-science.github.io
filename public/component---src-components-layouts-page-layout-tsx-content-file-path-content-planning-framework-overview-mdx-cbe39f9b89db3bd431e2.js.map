{"version":3,"file":"component---src-components-layouts-page-layout-tsx-content-file-path-content-planning-framework-overview-mdx-cbe39f9b89db3bd431e2.js","mappings":"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","sources":["webpack://strudel/./content/planning-framework/overview.mdx","webpack://strudel/./src/components/layouts/PageLayout.tsx","webpack://strudel/./src/components/ContentCard.tsx","webpack://strudel/./src/components/Hero.tsx","webpack://strudel/./src/components/PageHeader.tsx","webpack://strudel/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nimport {Grid} from '@mui/material';\nimport {Hero} from '/src/components/Hero';\nimport {PageContainer} from '/src/components/PageContainer';\nimport {ContentCard} from '/src/components/ContentCard';\nimport {Link} from 'gatsby';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    h2: \"h2\",\n    h4: \"h4\",\n    h1: \"h1\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(Hero, null, React.createElement(_components.p, null, \"STRUDEL Planning Framework will help scientific software teams incorporate UX practices in their development work.\"), React.createElement(_components.h2, null, \"The STRUDEL Planning Framework\"), React.createElement(Grid, {\n    container: true,\n    spacing: 4\n  }, React.createElement(Grid, {\n    item: true,\n    md: 4\n  }, React.createElement(ContentCard, null, React.createElement(_components.h4, null, \"Surfaces key questions\"), React.createElement(_components.p, null, \"Surfaces key questions to consider when planning and designing new software products or features\"))), React.createElement(Grid, {\n    item: true,\n    md: 4\n  }, React.createElement(ContentCard, null, React.createElement(_components.h4, null, \"Foregrounds sociotechnical matters\"), React.createElement(_components.p, null, \"Consider organizational, social, and technical topics affecting team work\"))), React.createElement(Grid, {\n    item: true,\n    md: 4\n  }, React.createElement(ContentCard, null, React.createElement(_components.h4, null, \"Informed by typology research\"), React.createElement(_components.p, null, \"Key questions emerged from R&D of sociotechnical typology\"))))), \"\\n\", React.createElement(PageContainer, null, React.createElement(_components.h1, null, \"More information is coming soon!\"), React.createElement(_components.p, null, \"Understand the background and motivation by reviewing our initial \", React.createElement(Link, {\n    to: \"/planning-framework/typology\"\n  }, \"typology\"), \".\")));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/strudel-web/strudel-web/content/planning-framework/overview.mdx\";\nimport * as React from 'react';\nimport {Stack, Typography} from '@mui/material';\nimport BaseLayout from './BaseLayout';\nimport {PageHeader} from '../PageHeader';\nimport {StyledMarkdown} from '../StyledMarkdown';\nimport Seo from '../Seo';\nconst PageLayout = _ref => {\n  let {pageContext, children} = _ref;\n  return React.createElement(BaseLayout, {\n    hasSidebar: true\n  }, React.createElement(PageHeader, null, React.createElement(Stack, {\n    spacing: 2\n  }, React.createElement(Typography, {\n    component: \"h1\",\n    variant: \"h3\",\n    fontWeight: \"bold\"\n  }, pageContext.frontmatter.title), React.createElement(Typography, {\n    variant: \"h6\",\n    fontWeight: \"normal\"\n  }, pageContext.frontmatter.subtitle))), React.createElement(StyledMarkdown, null, children));\n};\nexport const Head = _ref2 => {\n  let {pageContext} = _ref2;\n  return React.createElement(Seo, {\n    title: pageContext.frontmatter.title\n  });\n};\nPageLayout\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PageLayout, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n","import * as React from 'react';\nimport { Box, BoxProps } from '@mui/material';\n\ninterface ContentCardProps extends BoxProps {\n  variant?: 'dark' | 'light' | 'outlined' | 'dot-outlined';\n}\n\n/**\n * TODO\n */\nexport const ContentCard: React.FC<ContentCardProps> = ({\n  variant = 'dark',\n  children,\n  sx,\n  ...rest\n}) => {\n  return (\n    <Box\n      {...rest}\n      sx={{\n        backgroundColor: variant === 'dark' ? 'secondary.main' : variant === 'light' ? 'neutral.main' : 'none',\n        borderColor: variant === 'dot-outlined' ? 'error.main' : 'primary.main',\n        borderRadius: 4,\n        borderStyle: variant === 'dot-outlined' ? 'dotted' : 'solid',\n        borderWidth: variant === 'outlined' ? 1 : variant === 'dot-outlined' ? 2 : 0,\n        color: variant === 'outlined' ? 'inherit' : 'black',\n        fontSize: '1rem',\n        padding: 3,\n        ...sx\n      }}\n    >\n      {children}\n    </Box>\n  )\n}","import React, { PropsWithChildren } from 'react';\nimport { PageSection, PageSectionProps } from './PageSection';\nimport { Breakpoint } from '@mui/material';\n\ninterface HeroProps extends PropsWithChildren {\n  /** Optionally wrap the inner content in its own container and give it a max width. */\n  containerWidth?: false | Breakpoint | undefined;\n}\n\n/**\n * Full width purple page section for area towards the top of a page.\n */\nexport const Hero: React.FC<PageSectionProps> = ({\n  containerWidth = 'md',\n  sideRibbon,\n  sx,\n  children \n}) => {\n  return (\n    <PageSection\n      containerWidth={containerWidth}\n      sideRibbon={sideRibbon}\n      sx={{\n        backgroundColor: 'info.main',\n        color: 'white',\n        fontSize: '1.15em',\n        ...sx\n      }}\n    >\n      {children}\n    </PageSection>\n  );\n};","import React, { PropsWithChildren } from 'react';\nimport { PageSection, PageSectionProps } from './PageSection';\n\n\n/**\n * Full width light grey page section for the page title and headline.\n */\nexport const PageHeader: React.FC<PageSectionProps> = ({ children, sx, ...rest }) => {\n  return (\n    <PageSection\n      {...rest}\n      sx={{\n        backgroundColor: 'neutral.main',\n        color: 'info.main',\n        ...sx\n      }}\n    >\n      {children}\n    </PageSection>\n  );\n};","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","p","h2","h4","h1","_provideComponents","components","React","Hero","Grid","container","spacing","item","md","ContentCard","PageContainer","Link","to","wrapper","MDXLayout","PageLayout","_ref","pageContext","children","BaseLayout","hasSidebar","PageHeader","Stack","Typography","component","variant","fontWeight","frontmatter","title","subtitle","StyledMarkdown","Head","_ref2","Seo","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","sx","rest","Box","backgroundColor","borderColor","borderRadius","borderStyle","borderWidth","color","fontSize","padding","containerWidth","sideRibbon","PageSection","MDXContext","useMDXComponents","contextComponents"],"sourceRoot":""}